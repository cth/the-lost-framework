:- module(file_management, [is_generated_file/1, rm_gen/0, rm_tmp/0, move_data_file/2]).

/** <module> file management

This library contains utility predicates for file management.

@author: Christian Theil Have

*/

:- use_library(path).

%% is_generated_file(+File)
%
% True iff File is a file generated by one of the model of the framework
is_generated_file(File) :-
        write(is_generated_file(File)),nl,
        atom_codes(File,FileCodes),
        atom_codes('.gen',ExtCodes),
        append(_,ExtCodes,FileCodes). % true if FileName ends with .gen 

%% rm_gen
%
% This predicate deletes *.gen files in $LOST_BASE_DIR/data repository
rm_gen :-
	lost_data_directory(D),
	atom_concat(D,'*.gen',FileGlobPattern),
	atom_concat('rm -f ', FileGlobPattern, Command),
	write(Command),nl,
	system(Command).

%% rm_tmp
%
% This predicate deletes *.gen files in $LOST_BASE_DIR/tmp repository
rm_tmp :-
	lost_tmp_directory(D),
	atom_concat(D,'*',FileGlobPattern),
	atom_concat('rm -f ', FileGlobPattern, Command),
	write(Command),nl,
	system(Command).

%% move_data_file(+OldFilename,-NewFilename)
%
% Move a generated data file somewhere else and update the annotation index
move_data_file(X,X) :- !.
move_data_file(OldFilename, NewFilename) :-
    lost_data_index_file(IndexFile),
    copy_file(OldFilename,NewFilename),
	delete_file(OldFilename),
    lost_file_index_move_file(IndexFile,OldFilename,NewFilename).
