:- [config].
:- [parser].
:- use(interface).

% Task declarations:
:- task(annotate([text(fasta)],[],text(prolog(ranges(gene))))).
:- task(parse(text(prodigal_report),[],text(prolog(ranges(gene))))).

%% annotate(+InputFiles,+Options,+OutputFile)
% ==
% InputFiles = [ FastaFile ]
% ==
% Run Prodigal to annotate FastaFile.
annotate([InputFile], Options, OutputFile) :-
        prodigal_config(prodigal-binary, Prodigal),
        lost_tmp_file(prodigal,TmpOutputFile),
        prodigal_command(Prodigal, InputFile, TmpOutputFile, Command),
        system(Command),
        parse_prodigal_file(TmpOutputFile,OutputFile).


%% parse(+InputFiles, +Options, +OutputFile)
% Parse a report generated by the Prodigal gene finder.
parse([InputFile], _Options, OutputFile) :-
	parse_prodigal_file(InputFile,OutputFile).
                
prodigal_command(Executable,InputFile,OutputFile,Command) :-
        atom_concat_list(['cat ', InputFile, '|', Executable, ' > ', OutputFile ], Command). 

test :-
        annotate(['../../data/NC_000913.seq'],[],'test.out').
